# Generate technical documents
.docs:
    extends: .install
    stage: build
    script:
        - cd $JOB_PACKAGE_FOLDER/$JOB_PACKAGE_NAME
        - yarn docs
    artifacts:
        name: $CI_JOB_NAME
        paths: [$JOB_PACKAGE_FOLDER/$JOB_PACKAGE_NAME/docs/]

# Lint typescript coding
.lint:
    extends: .install
    stage: build
    script:
        - cd $JOB_PACKAGE_FOLDER/$JOB_PACKAGE_NAME
        - yarn lint

# Create build files
.build plugin:
    extends: .install
    stage: build
    script:
        # If we are in production build check if it is necessary
        - '[[ $CI_JOB_STAGE == "build production" ]] && [[ ! -f plugins/$JOB_PACKAGE_NAME/.publish ]] && echo $LERNA_SKIP_MESSAGE && exit 0'
        - cd plugins/$JOB_PACKAGE_NAME
        # Set a revision prerelease version so that version can be sent out to customers for testings
        - export CURRENT_VERSION=$(node -e "console.log(require('./package.json').version)")
        - '[[ $CI_JOB_STAGE == "build" ]] && yarn version --no-git-tag-version --new-version $CURRENT_VERSION"-"$(git rev-list --full-history --all --count)'
        # Check if typescript .d.ts files can be built for add-ons
        - yarn tsc
        # Build the plugin
        - yarn build
    artifacts:
        name: $CI_JOB_NAME
        paths: [plugins/$JOB_PACKAGE_NAME/build/]
