# Collect all artifacts and save as own artifacts so they can be used in review apps / next steps
collect all artifacts:
    stage: test
    script: echo .
    artifacts:
        name: all build artifacts
        paths:
            - plugins/*/build/*
            - plugins/*/docs/*

# Start the cypress e2e test
.docker e2e cypress:
    when: always # Always try the e2e test because it must be stopped
    stage: test
    services: ["docker:dind"]
    script:
        - yarn docker-compose:e2e up --build -d
        - export WP_WAIT_CONTAINER=$(yarn --silent docker-compose:e2e:name-wordpress)
        # Collect all builds and copy them to the container, and wait for the plugin until it is ready
        - for slug in $(yarn --silent workspace:slugs); do docker cp plugins/$slug/build/$slug $WP_WAIT_CONTAINER:/var/www/html/wp-content/plugins; done;
        - yarn wp-wait
        # Start cypress
        - >
            docker run --rm --network "$COMPOSE_PROJECT_NAME-ci-$JOB_PACKAGE_NAME-$CI_COMMIT_REF_SLUG""_locl" -v "$PWD":/e2e
            -e CI_COMMIT_REF_SLUG=$CI_COMMIT_REF_SLUG
            -e JOB_PACKAGE_NAME=$JOB_PACKAGE_NAME
            -e CI=1
            -v /var/run/docker.sock:/var/run/docker.sock -w /e2e/plugins/$JOB_PACKAGE_NAME matzeeable/cypress-dind:latest run
        - ls -la plugins/$JOB_PACKAGE_NAME/test/cypress/**/*
    after_script: # Purge
        - export COMPOSE_PROJECT_NAME_SUFFIX=-ci-$JOB_PACKAGE_NAME
        - chmod +x ./devops/scripts/purge-ci.sh
        - ./devops/scripts/purge-ci.sh
    artifacts:
        name: $CI_JOB_NAME
        when: always # Always create cypress results
        paths:
            - plugins/$JOB_PACKAGE_NAME/test/cypress/screenshots
            - plugins/$JOB_PACKAGE_NAME/test/cypress/videos
    only:
        variables: [$JOB_PACKAGE_NAME]
