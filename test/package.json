{
    "name": "test",
    "private": true,
    "workspaces": {
        "packages": [
            "plugins/*",
            "packages/*"
        ],
        "nohoist": [
            "**/grunt*"
        ]
    },
    "docker-hub-username": "matzeeable",
    "docker-ci-image-name": "ci-php-composer-node",
    "docker-ci-e2e-image-name": "cypress-dind",
    "db-snapshot": [
        "wp_posts",
        "wp_postmeta"
    ],
    "scripts": {
        "bootstrap": "yarn install$(test $CI && echo ' --frozen-lockfile') && lerna exec -- yarn install$(test $CI && echo ' --frozen-lockfile') && lerna link && lerna run bootstrap --parallel",
        "docker:start": "yarn docker-compose up --build -d && concurrently --raw \"yarn docker-compose logs -f -t --tail=10\" \"yarn --silent wp-wait && WORKSPACE_COMMAND='yarn dev' yarn --silent workspace:concurrently\"",
        "docker:stop": "yarn docker-compose stop",
        "docker:rm": "yarn docker-compose down",
        "docker:purge": "yarn docker-compose down -v",
        "docker-compose": "PLUGIN_SLUGS=$(yarn --silent workspace:slugs) COMPOSE_PATH_SEPARATOR=: COMPOSE_FILE=./devops/docker-compose/docker-compose.yml:./devops/docker-compose/docker-compose.local.yml:$(yarn --silent workspace:compose-files) COMPOSE_PROJECT_NAME=${npm_package_name} docker-compose",
        "docker-compose:name": "echo $(docker inspect -f '{{.Name}}' $(yarn --silent docker-compose --log-level ERROR ps -q ${DCOMPOSE_SERVICE_NAME}) | cut -c2-)",
        "docker-compose:name-wordpress": "DCOMPOSE_SERVICE_NAME=wordpress yarn --silent docker-compose:name",
        "wp-cli": "yarn --silent docker-compose$(test $CI && echo ':e2e' || echo ' --log-level ERROR') exec --user 33:33 -T wordpress /bin/bash -c",
        "wp-wait": "timeout=500 docker exec -e REST_ENDPOINT=$(cd plugins && ls | head -1) ${WP_WAIT_CONTAINER:=$(yarn --silent docker-compose:name-wordpress)} bash -c 'while [[ \"$(curl --insecure -s -o /dev/null -w ''%{http_code}'' localhost/wp-json/$REST_ENDPOINT/v1/plugin)\" != \"200\" ]]; do sleep 2; done'",
        "db:snapshot": "yarn --silent wp-cli \"wp db export - --tables=$(node -e 'console.log(require(`./package.json`)[`db-snapshot`].join(`,`))')\" >",
        "db:snapshot-import-on-startup": "yarn --silent db:snapshot ./devops/scripts/startup.sql",
        "db:snapshot-import": "yarn --silent wp-cli \"wp db import /scripts/startup.sql\"",
        "docker-compose:e2e": "PLUGIN_SLUGS=$(yarn --silent workspace:slugs) COMPOSE_PATH_SEPARATOR=: COMPOSE_FILE=./devops/docker-compose/docker-compose.yml:./devops/docker-compose/docker-compose.e2e.yml:$(yarn --silent workspace:compose-files) COMPOSE_PROJECT_NAME=${npm_package_name}-ci-${JOB_PACKAGE_NAME}-${CI_COMMIT_REF_SLUG} docker-compose --log-level ERROR",
        "docker-compose:e2e:name": "echo $(docker inspect -f '{{.Name}}' $(yarn --silent docker-compose:e2e ps -q ${DCOMPOSE_SERVICE_NAME}) | cut -c2-)",
        "docker-compose:e2e:name-wordpress": "DCOMPOSE_SERVICE_NAME=wordpress yarn --silent docker-compose:e2e:name",
        "docker-compose-traefik": "PLUGIN_SLUGS=$(yarn --silent workspace:slugs) COMPOSE_PATH_SEPARATOR=: COMPOSE_FILE=./devops/docker-compose/docker-compose.yml:./devops/docker-compose/docker-compose.traefik.yml:$(yarn --silent workspace:compose-files) COMPOSE_PROJECT_NAME=${npm_package_name}-traefik-${CI_COMMIT_REF_SLUG} docker-compose --log-level ERROR",
        "docker-compose-traefik-name": "echo $(docker inspect -f '{{.Name}}' $(yarn --silent docker-compose-traefik ps -q ${DCOMPOSE_SERVICE_NAME}) | cut -c2-)",
        "docker-compose-traefik-name-wordpress": "DCOMPOSE_SERVICE_NAME=wordpress yarn --silent docker-compose-traefik-name",
        "workspace:concurrently": "node -e \"require('concurrently')('$(yarn --silent lerna list --all -p --loglevel silent | tr -s '\r\n' ',')'.split(',').filter(Boolean).map(d => 'cd \\'' + d + '\\' && ' + process.env.WORKSPACE_COMMAND), { raw: true })\"",
        "workspace:compose-files": "find packages/*/devops/docker-compose/* plugins/*/devops/docker-compose/* -printf './%p:' 2>/dev/null | sed -e 's/:*$/\\n/'",
        "workspace:slugs": "find plugins/* -maxdepth 0 -printf '%p ' 2>/dev/null | sed -e 's/ *$/\\n/' | sed 's/plugins\\///g'"
    },
    "lerna": {
        "npmClient": "yarn",
        "useWorkspaces": true,
        "version": "independent",
        "command": {
            "version": {
                "conventionalCommits": true,
                "conventionalChangelog": {
                    "context": {
                        "linkReferences": false,
                        "linkCompare": false
                    },
                    "writerOpts": {
                        "transform": {
                            "hash": null
                        },
                        "commitPartial": "*{{#if scope}} **{{scope}} :**{{~/if}} {{#if subject}}{{~subject}}{{~else}}{{~header}}{{~/if}}\n"
                    }
                },
                "createRelease": "gitlab",
                "message": "chore(release): publish %s [ci skip]",
                "gitAddInclude": "src/index.php",
                "allowBranch": "feat/multipackage"
            }
        }
    },
    "husky": {
        "hooks": {
            "pre-commit": "pretty-quick --staged",
            "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
        }
    },
    "commitlint": {
        "extends": [
            "@commitlint/config-conventional"
        ],
        "rules": {
            "header-max-length": [
                2,
                "always",
                140
            ]
        }
    },
    "prettier": {
        "arrowParens": "always",
        "printWidth": 120,
        "useTabs": false,
        "tabWidth": 4,
        "endOfLine": "lf",
        "overrides": [
            {
                "files": "*.php",
                "options": {
                    "singleQuote": true,
                    "braceStyle": "1tbs"
                }
            }
        ]
    },
    "devDependencies": {
        "@commitlint/cli": "^7.6.1",
        "@commitlint/config-conventional": "^7.6.0",
        "@prettier/plugin-php": "^0.10.2",
        "@types/grunt": "^0.4.25",
        "concurrently": "^4.1.2",
        "husky": "^2.7.0",
        "lerna": "^3.18.4",
        "prettier": "^1.19.1",
        "pretty-quick": "^1.11.1",
        "tslint": "^5.20.1",
        "tslint-config-prettier": "^1.18.0",
        "tslint-react": "^4.1.0",
        "typescript": "~3.7.2"
    }
}
